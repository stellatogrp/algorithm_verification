N_samples= 10
max_N= 5
xinit_eps= 0.5
generating
[-0.01   -0.0212 -0.0356  0.0238  0.0378 -0.0154]
[-0.0109 -0.0221 -0.0333  0.0276  0.0312 -0.0129]
[-0.0136 -0.022  -0.0289  0.0259  0.0259 -0.0139]
[-0.0153 -0.0224 -0.0254  0.0258  0.0223 -0.0142]
[-0.0159 -0.0205 -0.0231  0.0256  0.0196 -0.0125]
[-0.0159 -0.0181 -0.0206  0.0246  0.0164 -0.0138]
[-0.0173 -0.0189 -0.0184  0.0244  0.0137 -0.0132]
[-0.017  -0.0181 -0.0152  0.0249  0.0128 -0.0129]
[-0.0143 -0.0182 -0.0124  0.0223  0.0103 -0.0121]
[-0.0141 -0.0158 -0.0116  0.0212  0.0062 -0.0114]
Set parameter GURO_PAR_SPECIAL
Set parameter TokenServer to value "license.rc.princeton.edu"
Set parameter NonConvex to value 2
Set parameter MIPGap to value 0.1
Set parameter TimeLimit to value 10800
(107,) (51,)
[ 0.01    0.0212  0.0356 -0.0238 -0.0378  0.0154 -0.     -0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.     -0.     -0.      0.      0.     -0.     -0.     -0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.     -0.     -0.     -0.
 -0.01   -0.0212 -0.0356  0.0238  0.0378 -0.0154 -0.012  -0.0211 -0.0321
  0.0256  0.0316 -0.0145 -0.0149 -0.0229 -0.0298  0.0287  0.0272 -0.0101
 -0.0173 -0.0248 -0.0284  0.0319  0.023  -0.0048 -0.0184 -0.0248 -0.0281
  0.0357  0.0174 -0.0002 -0.0139  0.0119 -0.032   0.0618  0.0093 -0.0189
  0.0001  0.     -0.002   0.0004 -0.003  -0.0015  0.0006 -0.0035 -0.0016
  0.0008 -0.0015 -0.0031  0.0137  0.0216 -0.0179  0.0021  0.0021  0.0019
  0.002   0.0019 -0.0015  0.0011  0.0045  0.0022 -0.0019  0.0009  0.005
  0.0039  0.0016  0.0022  0.0046  0.0316  0.0395  0.0043 -0.0037]
5 steps of algorithm
----Initial set----
SET(x): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0.]
SET(y): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
SET(z): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
----Parameter set----
SET(x_init): box with l = [-0.49584485 -0.50537061 -0.52405158 -0.49742123 -0.46844788 -0.50393983] and u = [0.50415515 0.49462939 0.47594842 0.50257877 0.53155212 0.49606017]
SET(l_param): BoxStackSet =
SET(u_param): BoxStackSet =
----Algorithm steps----
x = LINSTEP(x, z, y, )
y = LINSTEP(y, x, z, )
w = LINSTEP(x, y, )
z_tilde = MAX_WITH_VEC(w)
z = MIN_WITH_VEC(z_tilde)
s = LINSTEP(z, y, )
----Objective----
[<algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e4147c2a00>, <algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e4147c2610>]
Warning for adding constraints: zero or small (< 1e-13) coefficients, ignored
<class 'gurobipy.MVar'> <class 'gurobipy.MQuadExpr'> <class 'gurobipy.MVar'> <class 'gurobipy.MVar'>
(107,) (51,)
[ 0.0109  0.0221  0.0333 -0.0276 -0.0312  0.0129 -0.     -0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.     -0.     -0.     -0.      0.     -0.     -0.     -0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.0109 -0.0221 -0.0333  0.0276  0.0312 -0.0129 -0.0117 -0.0211 -0.0285
  0.0258  0.0268 -0.0142 -0.0143 -0.0224 -0.0264  0.0283  0.0228 -0.01
 -0.0164 -0.024  -0.0252  0.031   0.019  -0.0048 -0.0174 -0.0238 -0.025
  0.0342  0.014  -0.0004 -0.0126  0.0108 -0.028   0.0568  0.0068 -0.0188
  0.0006  0.0007  0.0006  0.0005 -0.0031 -0.001   0.0006 -0.0035 -0.0012
  0.0008 -0.0015 -0.0026  0.0127  0.0205 -0.0156 -0.      0.0002 -0.0011
 -0.0013  0.0015 -0.0021  0.0005  0.004   0.0018 -0.0023  0.0006  0.0047
  0.0035  0.0011  0.0018  0.0042  0.0284  0.0362  0.0029 -0.0049]
5 steps of algorithm
----Initial set----
SET(x): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0.]
SET(y): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
SET(z): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
----Parameter set----
SET(x_init): box with l = [-0.49681983 -0.50631904 -0.52173745 -0.49362329 -0.47503123 -0.50149499] and u = [0.50318017 0.49368096 0.47826255 0.50637671 0.52496877 0.49850501]
SET(l_param): BoxStackSet =
SET(u_param): BoxStackSet =
----Algorithm steps----
x = LINSTEP(x, z, y, )
y = LINSTEP(y, x, z, )
w = LINSTEP(x, y, )
z_tilde = MAX_WITH_VEC(w)
z = MIN_WITH_VEC(z_tilde)
s = LINSTEP(z, y, )
----Objective----
[<algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e4147c2b50>, <algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e4147c27c0>]
<class 'gurobipy.MVar'> <class 'gurobipy.MQuadExpr'> <class 'gurobipy.MVar'> <class 'gurobipy.MVar'>
(107,) (51,)
[ 0.0136  0.022   0.0289 -0.0259 -0.0259  0.0139 -0.     -0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.      0.      0.     -0.
 -0.     -0.     -0.     -0.      0.     -0.     -0.     -0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.0136 -0.022  -0.0289  0.0259  0.0259 -0.0139 -0.0144 -0.021  -0.025
  0.026   0.0225 -0.0139 -0.0164 -0.0223 -0.0233  0.0284  0.019  -0.0095
 -0.018  -0.0238 -0.0224  0.0309  0.0155 -0.0042 -0.0184 -0.0235 -0.0225
  0.0338  0.0107  0.0002 -0.0128  0.0103 -0.0244  0.0535  0.0045 -0.0192
  0.0011 -0.0006  0.0003  0.0006 -0.0032 -0.0009  0.0007 -0.0035 -0.0011
  0.0009 -0.0016 -0.0024  0.0124  0.0205 -0.0138  0.0008 -0.0009 -0.0014
  0.0003  0.0015 -0.0023  0.0003  0.0041  0.0018 -0.0024  0.0004  0.0046
  0.0033  0.0008  0.0015  0.004   0.0261  0.0343  0.0014 -0.0067]
5 steps of algorithm
----Initial set----
SET(x): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0.]
SET(y): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
SET(z): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
----Parameter set----
SET(x_init): box with l = [-0.4994529  -0.50624838 -0.51731087 -0.49524332 -0.48034156 -0.50243237] and u = [0.5005471  0.49375162 0.48268913 0.50475668 0.51965844 0.49756763]
SET(l_param): BoxStackSet =
SET(u_param): BoxStackSet =
----Algorithm steps----
x = LINSTEP(x, z, y, )
y = LINSTEP(y, x, z, )
w = LINSTEP(x, y, )
z_tilde = MAX_WITH_VEC(w)
z = MIN_WITH_VEC(z_tilde)
s = LINSTEP(z, y, )
----Objective----
[<algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e4147c2d00>, <algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e4147c2220>]
<class 'gurobipy.MVar'> <class 'gurobipy.MQuadExpr'> <class 'gurobipy.MVar'> <class 'gurobipy.MVar'>
(107,) (51,)
[ 0.0153  0.0224  0.0254 -0.0258 -0.0223  0.0142 -0.     -0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.      0.     -0.     -0.      0.     -0.     -0.     -0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.      0.      0.     -0.
 -0.0153 -0.0224 -0.0254  0.0258  0.0223 -0.0142 -0.0158 -0.0211 -0.0221
  0.0262  0.0189 -0.0138 -0.0173 -0.0223 -0.0207  0.0285  0.0156 -0.0093
 -0.0186 -0.0236 -0.02    0.0308  0.0123 -0.004  -0.0187 -0.0232 -0.0202
  0.0334  0.0079  0.0004 -0.0125  0.0098 -0.0213  0.0504  0.0024 -0.0195
  0.0011 -0.0007 -0.      0.0006 -0.0032 -0.0008  0.0007 -0.0035 -0.001
  0.0009 -0.0016 -0.0021  0.0119  0.0202 -0.0121  0.0011 -0.0007 -0.0011
  0.0007  0.0014 -0.0024  0.0002  0.004   0.0017 -0.0025  0.0002  0.0044
  0.003   0.0005  0.0012  0.0038  0.024   0.0323  0.0002 -0.0082]
5 steps of algorithm
----Initial set----
SET(x): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0.]
SET(y): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
SET(z): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
----Parameter set----
SET(x_init): box with l = [-0.50120433 -0.50655397 -0.51380524 -0.49539776 -0.48392903 -0.50273456] and u = [0.49879567 0.49344603 0.48619476 0.50460224 0.51607097 0.49726544]
SET(l_param): BoxStackSet =
SET(u_param): BoxStackSet =
----Algorithm steps----
x = LINSTEP(x, z, y, )
y = LINSTEP(y, x, z, )
w = LINSTEP(x, y, )
z_tilde = MAX_WITH_VEC(w)
z = MIN_WITH_VEC(z_tilde)
s = LINSTEP(z, y, )
----Objective----
[<algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e4147c28b0>, <algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e4147c2d00>]
<class 'gurobipy.MVar'> <class 'gurobipy.MQuadExpr'> <class 'gurobipy.MVar'> <class 'gurobipy.MVar'>
(107,) (51,)
[ 0.0159  0.0205  0.0231 -0.0256 -0.0196  0.0125 -0.     -0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.     -0.     -0.     -0.     -0.     -0.     -0.     -0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.0159 -0.0205 -0.0231  0.0256  0.0196 -0.0125 -0.0157 -0.0197 -0.0196
  0.0246  0.0164 -0.0127 -0.0169 -0.0207 -0.0184  0.0266  0.0134 -0.0085
 -0.0178 -0.0219 -0.0178  0.0287  0.0104 -0.0035 -0.0178 -0.0215 -0.0181
  0.031   0.0064  0.0006 -0.0117  0.009  -0.0187  0.046   0.0015 -0.0183
  0.0007 -0.0002  0.0006  0.0006 -0.003  -0.0007  0.0007 -0.0033 -0.0009
  0.0009 -0.0015 -0.0019  0.011   0.0189 -0.0107  0.0002 -0.0007 -0.0013
 -0.0004  0.0013 -0.0023  0.0001  0.0037  0.0016 -0.0024  0.0002  0.0041
  0.0028  0.0004  0.0011  0.0035  0.0217  0.0296 -0.0003 -0.0082]
5 steps of algorithm
----Initial set----
SET(x): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0.]
SET(y): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
SET(z): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
----Parameter set----
SET(x_init): box with l = [-0.50181237 -0.50471346 -0.51149317 -0.49560133 -0.48661793 -0.50112816] and u = [0.49818763 0.49528654 0.48850683 0.50439867 0.51338207 0.49887184]
SET(l_param): BoxStackSet =
SET(u_param): BoxStackSet =
----Algorithm steps----
x = LINSTEP(x, z, y, )
y = LINSTEP(y, x, z, )
w = LINSTEP(x, y, )
z_tilde = MAX_WITH_VEC(w)
z = MIN_WITH_VEC(z_tilde)
s = LINSTEP(z, y, )
----Objective----
[<algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e4131a5eb0>, <algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e4131a5f40>]
<class 'gurobipy.MVar'> <class 'gurobipy.MQuadExpr'> <class 'gurobipy.MVar'> <class 'gurobipy.MVar'>
(107,) (51,)
[ 0.0159  0.0181  0.0206 -0.0246 -0.0164  0.0138 -0.     -0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.     -0.     -0.     -0.      0.     -0.     -0.     -0.     -0.
  0.      0.     -0.     -0.     -0.     -0.     -0.     -0.     -0.
 -0.0159 -0.0181 -0.0206  0.0246  0.0164 -0.0138 -0.0162 -0.0188 -0.0176
  0.0238  0.0141 -0.0122 -0.0172 -0.0199 -0.0165  0.0257  0.0114 -0.008
 -0.0179 -0.0211 -0.0162  0.0277  0.0087 -0.0032 -0.0177 -0.0207 -0.0165
  0.0298  0.005   0.0008 -0.0114  0.0085 -0.0167  0.0431  0.0006 -0.0178
  0.0005 -0.0018  0.001   0.0006 -0.003  -0.0006  0.0007 -0.0032 -0.0008
  0.0008 -0.0015 -0.0018  0.0105  0.0182 -0.0096 -0.0005 -0.0028 -0.0016
  0.0007  0.0012 -0.0024 -0.      0.0036  0.0015 -0.0023  0.0001  0.004
  0.0026  0.0003  0.0009  0.0033  0.0201  0.0279 -0.0008 -0.0086]
5 steps of algorithm
----Initial set----
SET(x): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0.]
SET(y): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
SET(z): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
----Parameter set----
SET(x_init): box with l = [-0.50179617 -0.50228918 -0.50903175 -0.49653911 -0.48981211 -0.50241289] and u = [0.49820383 0.49771082 0.49096825 0.50346089 0.51018789 0.49758711]
SET(l_param): BoxStackSet =
SET(u_param): BoxStackSet =
----Algorithm steps----
x = LINSTEP(x, z, y, )
y = LINSTEP(y, x, z, )
w = LINSTEP(x, y, )
z_tilde = MAX_WITH_VEC(w)
z = MIN_WITH_VEC(z_tilde)
s = LINSTEP(z, y, )
----Objective----
[<algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e412b90670>, <algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e412c5dd90>]
<class 'gurobipy.MVar'> <class 'gurobipy.MQuadExpr'> <class 'gurobipy.MVar'> <class 'gurobipy.MVar'>
(107,) (51,)
[ 0.0173  0.0189  0.0184 -0.0244 -0.0137  0.0132 -0.      0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.     -0.     -0.      0.      0.     -0.     -0.     -0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.0173 -0.0189 -0.0184  0.0244  0.0137 -0.0132 -0.0171 -0.0188 -0.0156
  0.0238  0.0117 -0.012  -0.0178 -0.0198 -0.0147  0.0256  0.0091 -0.0078
 -0.0182 -0.0208 -0.0145  0.0275  0.0066 -0.003  -0.0178 -0.0204 -0.0149
  0.0294  0.0031  0.001  -0.0112  0.0081 -0.0146  0.0409 -0.0008 -0.018
  0.0008 -0.0015  0.001   0.0006 -0.003  -0.0005  0.0007 -0.0031 -0.0007
  0.0009 -0.0015 -0.0016  0.0101  0.018  -0.0085 -0.0001 -0.0025 -0.0018
  0.0005  0.0011 -0.0025 -0.0001  0.0035  0.0014 -0.0024 -0.      0.0038
  0.0025  0.0001  0.0008  0.0031  0.0186  0.0264 -0.0017 -0.0095]
5 steps of algorithm
----Initial set----
SET(x): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0.]
SET(y): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
SET(z): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
----Parameter set----
SET(x_init): box with l = [-0.50318047 -0.5031145  -0.50679905 -0.49673484 -0.49252832 -0.50176646] and u = [0.49681953 0.4968855  0.49320095 0.50326516 0.50747168 0.49823354]
SET(l_param): BoxStackSet =
SET(u_param): BoxStackSet =
----Algorithm steps----
x = LINSTEP(x, z, y, )
y = LINSTEP(y, x, z, )
w = LINSTEP(x, y, )
z_tilde = MAX_WITH_VEC(w)
z = MIN_WITH_VEC(z_tilde)
s = LINSTEP(z, y, )
----Objective----
[<algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e413143e80>, <algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e412c092e0>]
<class 'gurobipy.MVar'> <class 'gurobipy.MQuadExpr'> <class 'gurobipy.MVar'> <class 'gurobipy.MVar'>
(107,) (51,)
[ 0.017   0.0181  0.0152 -0.0249 -0.0128  0.0129 -0.     -0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.     -0.     -0.      0.      0.     -0.     -0.      0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.017  -0.0181 -0.0152  0.0249  0.0128 -0.0129 -0.016  -0.0183 -0.0129
  0.0232  0.0086 -0.0116 -0.0165 -0.019  -0.0122  0.0246  0.0062 -0.0076
 -0.0168 -0.0197 -0.0121  0.0261  0.0039 -0.003  -0.0164 -0.0191 -0.0126
  0.0275  0.0009  0.0007 -0.0098  0.0072 -0.0117  0.0366 -0.0023 -0.0174
 -0.0003 -0.0001  0.      0.0005 -0.0028 -0.0004  0.0007 -0.003  -0.0004
  0.0008 -0.0015 -0.0012  0.0092  0.0167 -0.0068 -0.0004 -0.0001  0.0003
  0.      0.0009 -0.0024 -0.0002  0.0031  0.0011 -0.0026 -0.0002  0.0035
  0.0021 -0.0002  0.0004  0.0027  0.016   0.0235 -0.0024 -0.0099]
5 steps of algorithm
----Initial set----
SET(x): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0.]
SET(y): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
SET(z): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
----Parameter set----
SET(x_init): box with l = [-0.50286071 -0.50229545 -0.50366249 -0.49628191 -0.49339662 -0.50145381] and u = [0.49713929 0.49770455 0.49633751 0.50371809 0.50660338 0.49854619]
SET(l_param): BoxStackSet =
SET(u_param): BoxStackSet =
----Algorithm steps----
x = LINSTEP(x, z, y, )
y = LINSTEP(y, x, z, )
w = LINSTEP(x, y, )
z_tilde = MAX_WITH_VEC(w)
z = MIN_WITH_VEC(z_tilde)
s = LINSTEP(z, y, )
----Objective----
[<algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e412dc1f10>, <algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e4131cb640>]
<class 'gurobipy.MVar'> <class 'gurobipy.MQuadExpr'> <class 'gurobipy.MVar'> <class 'gurobipy.MVar'>
(107,) (51,)
[ 0.0143  0.0182  0.0124 -0.0223 -0.0103  0.0121 -0.     -0.     -0.
 -0.      0.     -0.     -0.     -0.     -0.      0.      0.     -0.
 -0.     -0.     -0.     -0.      0.     -0.     -0.     -0.     -0.
 -0.     -0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.0143 -0.0182 -0.0124  0.0223  0.0103 -0.0121 -0.0136 -0.0172 -0.0107
  0.0217  0.0063 -0.011  -0.0141 -0.0175 -0.0102  0.0228  0.0041 -0.0073
 -0.0145 -0.018  -0.0101  0.0239  0.0021 -0.003  -0.0142 -0.0173 -0.0105
  0.0249 -0.0005  0.0003 -0.0082  0.0062 -0.0094  0.032  -0.003  -0.0162
 -0.      0.     -0.0005  0.0005 -0.0026 -0.0001  0.0006 -0.0028 -0.0002
  0.0007 -0.0014 -0.0009  0.0082  0.0149 -0.0054  0.0005  0.0005  0.0005
  0.0004  0.0006 -0.0025 -0.0004  0.0028  0.0008 -0.0026 -0.0004  0.003
  0.0016 -0.0005  0.0002  0.0023  0.0136  0.0203 -0.0027 -0.0095]
5 steps of algorithm
----Initial set----
SET(x): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0.]
SET(y): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
SET(z): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
----Parameter set----
SET(x_init): box with l = [-0.50014399 -0.50237547 -0.50083199 -0.49889483 -0.49597475 -0.500685  ] and u = [0.49985601 0.49762453 0.49916801 0.50110517 0.50402525 0.499315  ]
SET(l_param): BoxStackSet =
SET(u_param): BoxStackSet =
----Algorithm steps----
x = LINSTEP(x, z, y, )
y = LINSTEP(y, x, z, )
w = LINSTEP(x, y, )
z_tilde = MAX_WITH_VEC(w)
z = MIN_WITH_VEC(z_tilde)
s = LINSTEP(z, y, )
----Objective----
[<algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e4120b0340>, <algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e412c47af0>]
<class 'gurobipy.MVar'> <class 'gurobipy.MQuadExpr'> <class 'gurobipy.MVar'> <class 'gurobipy.MVar'>
(107,) (51,)
[ 0.0141  0.0158  0.0116 -0.0212 -0.0062  0.0114 -0.     -0.     -0.
  0.      0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.     -0.     -0.      0.      0.     -0.     -0.     -0.     -0.
  0.      0.     -0.     -0.     -0.     -0.     -0.      0.     -0.
 -0.0141 -0.0158 -0.0116  0.0212  0.0062 -0.0114 -0.0139 -0.0157 -0.0095
  0.02    0.0051 -0.01   -0.0142 -0.0161 -0.009   0.021   0.0034 -0.0064
 -0.0144 -0.0166 -0.009   0.0221  0.0016 -0.0025 -0.0139 -0.0161 -0.0095
  0.0232 -0.0008  0.0006 -0.0081  0.0058 -0.0083  0.0295 -0.003  -0.015
  0.0007 -0.0017  0.0014  0.0005 -0.0026 -0.      0.0006 -0.0026 -0.0002
  0.0007 -0.0013 -0.0009  0.0076  0.014  -0.0049 -0.0007 -0.0032 -0.0022
  0.0003  0.0006 -0.0026 -0.0005  0.0026  0.0008 -0.0024 -0.0004  0.0029
  0.0016 -0.0004  0.0002  0.0022  0.0125  0.0189 -0.0027 -0.0091]
5 steps of algorithm
----Initial set----
SET(x): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0.]
SET(y): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
SET(z): const = [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
----Parameter set----
SET(x_init): box with l = [-0.5 -0.5 -0.5 -0.5 -0.5 -0.5] and u = [0.5 0.5 0.5 0.5 0.5 0.5]
SET(l_param): BoxStackSet =
SET(u_param): BoxStackSet =
----Algorithm steps----
x = LINSTEP(x, z, y, )
y = LINSTEP(y, x, z, )
w = LINSTEP(x, y, )
z_tilde = MAX_WITH_VEC(w)
z = MIN_WITH_VEC(z_tilde)
s = LINSTEP(z, y, )
----Objective----
[<algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e41206cd00>, <algoverify.objectives.convergence_residual.ConvergenceResidual object at 0x14e4126d5730>]
<class 'gurobipy.MVar'> <class 'gurobipy.MQuadExpr'> <class 'gurobipy.MVar'> <class 'gurobipy.MVar'>
Gurobi Optimizer version 9.5.2 build v9.5.2rc0 (linux64)
Thread count: 32 physical cores, 32 logical processors, using up to 32 threads
Optimize a model with 68340 rows, 58791 columns and 874870 nonzeros
Model fingerprint: 0x1c3783d5
Model has 10730 quadratic constraints
Coefficient statistics:
  Matrix range     [2e-08, 1e+00]
  QMatrix range    [1e+00, 2e+00]
  QLMatrix range   [1e+00, 1e+00]
  Objective range  [1e+00, 2e+00]
  Bounds range     [2e-19, 1e+03]
  RHS range        [2e-19, 1e+03]
Presolve removed 35670 rows and 26580 columns

Continuous model is non-convex -- solving as a MIP

Presolve removed 58015 rows and 45706 columns (presolve time = 6s) ...
Presolve removed 53433 rows and 43821 columns
Presolve time: 7.78s
Presolved: 30717 rows, 19710 columns, 283658 nonzeros
Presolved model has 10 SOS constraint(s)
Presolved model has 4740 bilinear constraint(s)
Variable types: 17220 continuous, 2490 integer (2490 binary)

Deterministic concurrent LP optimizer: primal and dual simplex
Showing first log only...


Root simplex log...

Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.052123e+09   1.587663e+16      8s
   15792   -2.0000000e+00   0.000000e+00   0.000000e+00     10s
   15792   -2.0000000e+00   0.000000e+00   0.000000e+00     10s
Concurrent spin time: 0.38s

Solved with dual simplex

Root relaxation: objective -2.000000e+00, 13288 iterations, 2.35 seconds (3.07 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   -2.00000    0 4752          -   -2.00000      -     -   13s
     0     0   -2.00000    0 4818          -   -2.00000      -     -   17s
     0     0   -2.00000    0 4979          -   -2.00000      -     -   19s
     0     0   -2.00000    0 4786          -   -2.00000      -     -   31s
     0     0   -2.00000    0 4794          -   -2.00000      -     -   33s
     0     0   -2.00000    0 4745          -   -2.00000      -     -   38s
     0     0   -2.00000    0 4757          -   -2.00000      -     -   40s
     0     0   -2.00000    0 4730          -   -2.00000      -     -   43s
     0     0   -2.00000    0 4727          -   -2.00000      -     -   45s
     0     0   -2.00000    0 4728          -   -2.00000      -     -   47s
     0     0   -2.00000    0 4732          -   -2.00000      -     -   61s
     0     2   -2.00000    0 4732          -   -2.00000      -     -   65s
    91   118   -2.00000    7 4731          -   -2.00000      -  49.2   70s
   283   319   -2.00000   11 4729          -   -2.00000      -  51.1   75s
   532   830   -2.00000   16 4724          -   -2.00000      -  37.9   81s
   929  1574   -2.00000   22 4723          -   -2.00000      -  29.9   87s
  1727  2710   -2.00000   37 4712          -   -2.00000      -  22.1  100s
  2947  4936   -2.00000   57 4708          -   -2.00000      -  18.1  114s
  5173  6957   -2.00000   95 4712          -   -2.00000      -  13.7  124s
  7194  8874   -2.00000  127 4693          -   -2.00000      -  12.1  134s
  9151 10847   -2.00000  159 4688          -   -2.00000      -  11.7  143s
 11152 13011   -2.00000  196 4673          -   -2.00000      -  11.5  154s
 13338 14631   -2.00000  228 4670          -   -2.00000      -  11.5  165s
 15069 14632   -2.00000   42    1          -   -2.00000      -  12.3  174s
 15071 14633   -2.00000   26    0          -   -2.00000      -  12.3  559s
 15072 14634   -2.00000  103    0          -   -2.00000      -  12.3  568s
 15073 14635   -2.00000  146   35          -   -2.00000      -  12.3  570s
 15074 14635   -2.00000  175    0          -   -2.00000      -  12.3  575s
 15076 14637   -2.00000   67    0          -   -2.00000      -  12.3  580s
 15078 14638   -2.00000  116    8          -   -2.00000      -  12.3  586s
 15082 14641   -2.00000   91    0          -   -2.00000      -  12.3  600s
H15083 13911                       0.0000000   -2.00000      -  14.6  641s
H15085 13220                      -0.6420764   -2.00000   211%  14.6  651s
 15137 13274   -2.00000   17 4716   -0.64208   -2.00000   211%  14.9  664s
 15201 13316   -2.00000   18 4716   -0.64208   -2.00000   211%  14.9  666s
 15364 13506   -2.00000   21 4714   -0.64208   -2.00000   211%  15.1  671s
 15497 13642   -2.00000   24 4714   -0.64208   -2.00000   211%  15.1  681s
 15685 14175   -2.00000   28 4708   -0.64208   -2.00000   211%  15.1  687s
 16350 14762 infeasible   37        -0.64208   -2.00000   211%  15.5  700s
 17353 15810   -2.00000   55 4723   -0.64208   -2.00000   211%  16.7  718s
 19053 17625 infeasible   76        -0.64208   -2.00000   211%  18.5  743s
H20343 16534                      -0.6492658   -2.00000   208%  19.2  743s
 21940 17207   -2.00000   47 4705   -0.64927   -2.00000   208%  19.8  805s
 23400 19975   -2.00000   48 4705   -0.64927   -2.00000   208%  20.3  837s
H24569 18957                      -0.6554297   -2.00000   205%  20.6  837s
 27310 20265   -2.00000  221 4686   -0.65543   -2.00000   205%  20.8  860s
H28535 19260                      -0.6554309   -2.00000   205%  21.1  860s
 30025 20599   -2.00000   89 4711   -0.65543   -2.00000   205%  21.9  896s
H31713 19469                      -0.7132416   -2.00000   180%  22.3  897s
 32297 21628   -2.00000  190 4686   -0.71324   -2.00000   180%  22.3  923s
 35265 22385   -2.00000   81 4737   -0.71324   -2.00000   180%  22.9  946s
 37405 23946   -2.00000   61 4712   -0.71324   -2.00000   180%  23.2  982s
 40404 26615   -2.00000  106 4693   -0.71324   -2.00000   180%  23.9 1009s
 44732 27062   -2.00000  155 4683   -0.71324   -2.00000   180%  24.1 1033s
H45866 26185                      -0.7304988   -2.00000   174%  24.3 1033s
 47156 26200   -2.00000  181 4676   -0.73050   -2.00000   174%  24.8 1157s
 47205 28460   -2.00000  181 4679   -0.73050   -2.00000   174%  24.9 1182s
H47592 28460                      -0.7304991   -2.00000   174%  25.0 1182s
 50000 30770   -2.00000  216 4677   -0.73050   -2.00000   174%  25.4 1210s
 52825 31386   -2.00000  254 4676   -0.73050   -2.00000   174%  25.8 1236s
 53706 34815   -2.00000  121 4688   -0.73050   -2.00000   174%  26.0 1267s
 58000 37665   -2.00000  316 4678   -0.73050   -2.00000   174%  26.3 1296s
 61850 39454   -2.00000  185 4707   -0.73050   -2.00000   174%  26.8 1326s
H62734 39454                      -0.7304992   -2.00000   174%  27.3 1326s
H63098 39454                      -0.7509569   -2.00000   166%  27.4 1326s
 64612 42554 infeasible  336        -0.75096   -2.00000   166%  28.0 1359s
 68871 45040 infeasible  300        -0.75096   -2.00000   166%  28.2 1390s
 72438 47956   -2.00000  244 4677   -0.75096   -2.00000   166%  28.7 1425s
 76352 51140   -2.00000  284 4682   -0.75096   -2.00000   166%  29.1 1458s
 80535 53969   -2.00000  315 4656   -0.75096   -2.00000   166%  29.5 1496s
 84327 56796   -2.00000  370 4659   -0.75096   -2.00000   166%  30.1 1540s
 88118 59718   -2.00000  406 4657   -0.75096   -2.00000   166%  30.4 1582s
H90950 59718                      -0.7509578   -2.00000   166%  31.2 1582s
H92034 59718                      -0.7688066   -2.00000   160%  31.4 1582s
 92654 61317   -2.00000  476 4648   -0.76881   -2.00000   160%  31.5 1623s
H92907 61317                      -0.7688069   -2.00000   160%  31.5 1623s
 95422 66093   -2.00000  145 4698   -0.76881   -2.00000   160%  32.4 1675s
 101968 68181 infeasible  386        -0.76881   -2.00000   160%  32.6 1714s
 105899 70447   -2.00000  369 4661   -0.76881   -2.00000   160%  33.9 1759s
 110635 75082 infeasible  330        -0.76881   -2.00000   160%  35.1 1808s
 116829 78863   -2.00000  284 4674   -0.76881   -2.00000   160%  34.8 1849s
 119958 78863 infeasible  364        -0.76881   -2.00000   160%  34.7 1850s
 121967 81749   -2.00000  349 4670   -0.76881   -2.00000   160%  34.6 1898s
 126245 84232 infeasible  379        -0.76881   -2.00000   160%  34.8 1941s
 130857 87517   -2.00000  129 4698   -0.76881   -2.00000   160%  35.6 1987s
 135919 89921   -2.00000  161 4681   -0.76881   -2.00000   160%  35.8 2068s
 138938 94703   -2.00000  161 4683   -0.76881   -2.00000   160%  35.6 2125s
 145359 98156   -2.00000  287 4684   -0.76881   -2.00000   160%  35.7 2180s
 150533 100793 infeasible  224        -0.76881   -2.00000   160%  35.9 2228s
 154339 105837 infeasible  358        -0.76881   -2.00000   160%  36.0 2285s
 161731 108861   -2.00000  180 4704   -0.76881   -2.00000   160%  36.2 2331s
 166352 112262   -2.00000  188 4720   -0.76881   -2.00000   160%  36.4 2377s
 171727 116010   -2.00000  249 4688   -0.76881   -2.00000   160%  36.7 2425s
H173229 116010                      -0.7688073   -2.00000   160%  36.6 2425s
 177063 118962   -2.00000  301 4678   -0.76881   -2.00000   160%  36.6 2467s
 181568 123501   -2.00000  378 4679   -0.76881   -2.00000   160%  36.7 2512s
 187621 127337   -2.00000  470 4676   -0.76881   -2.00000   160%  36.6 2558s
 192799 130798   -2.00000  520 4669   -0.76881   -2.00000   160%  36.5 2602s
 197593 133530 infeasible  569        -0.76881   -2.00000   160%  36.4 2642s
 201754 136637 infeasible  340        -0.76881   -2.00000   160%  36.5 2686s
 206334 140845   -2.00000  341 4671   -0.76881   -2.00000   160%  36.6 2729s
 211847 144225   -2.00000  413 4667   -0.76881   -2.00000   160%  36.6 2782s
 216269 146346   -2.00000  476 4656   -0.76881   -2.00000   160%  36.6 2820s
H218208 146346                      -0.8027430   -2.00000   149%  36.6 2820s
H219041 150193                      -0.8027462   -2.00000   149%  36.6 2868s
 224821 153884   -2.00000  205 4693   -0.80275   -2.00000   149%  36.8 2913s
 230113 157060 infeasible  381        -0.80275   -2.00000   149%  37.0 2955s
H231872 157060                      -0.8043419   -2.00000   149%  37.1 2955s
 234878 160088   -2.00000  300 4695   -0.80434   -2.00000   149%  37.4 2998s
H235039 160088                      -0.8043435   -2.00000   149%  37.4 2998s
 239699 163759   -2.00000  292 4676   -0.80434   -2.00000   149%  37.5 3042s
H240444 163759                      -0.8043443   -2.00000   149%  37.5 3042s
 245115 166906 infeasible  390        -0.80434   -2.00000   149%  37.7 3086s
H245269 166906                      -0.8043449   -2.00000   149%  37.6 3086s
 249270 170071 infeasible  432        -0.80434   -2.00000   149%  37.7 3130s
 254241 172387   -2.00000  328 4677   -0.80434   -2.00000   149%  38.0 3173s
 258249 175398   -2.00000  480 4666   -0.80434   -2.00000   149%  38.2 3219s
 263361 178629   -2.00000  328 4680   -0.80434   -2.00000   149%  38.4 3265s
H263836 178629                      -0.8043450   -2.00000   149%  38.4 3265s
 268141 180218 infeasible  392        -0.80434   -2.00000   149%  38.5 3307s
 270539 184120 infeasible  388        -0.80434   -2.00000   149%  38.6 3358s
 276281 185815   -2.00000  343 4681   -0.80434   -2.00000   149%  38.9 3432s
 278977 190475   -2.00000  382 4655   -0.80434   -2.00000   149%  39.1 3494s
 286066 193739   -2.00000  264 4686   -0.80434   -2.00000   149%  39.3 3543s
 291156 196963   -2.00000  298 4676   -0.80434   -2.00000   149%  39.4 3595s
 296569 199760   -2.00000  431 4676   -0.80434   -2.00000   149%  39.7 3644s
 301218 202263   -2.00000  517 4663   -0.80434   -2.00000   149%  40.0 3692s
 305387 204972 infeasible  598        -0.80434   -2.00000   149%  40.4 3743s
 309973 207441   -2.00000  675 4651   -0.80434   -2.00000   149%  40.8 3793s
H313403 207441                      -0.8047609   -2.00000   149%  41.0 3793s
 313902 211161 infeasible 1009        -0.80476   -2.00000   149%  41.0 3844s
H316019 211161                      -0.8047617   -2.00000   149%  41.1 3844s
 319443 214944 infeasible  297        -0.80476   -2.00000   149%  41.2 3894s
 325059 218428   -2.00000  632 4664   -0.80476   -2.00000   149%  41.5 3944s
 330328 221305 infeasible  266        -0.80476   -2.00000   149%  41.7 3993s
 334852 223914   -2.00000 1143 4625   -0.80476   -2.00000   149%  42.0 4045s
 339045 227814   -2.00000  265 4691   -0.80476   -2.00000   149%  42.3 4096s
 344680 231391   -2.00000  222 4690   -0.80476   -2.00000   149%  42.5 4144s
 349735 234608   -2.00000  306 4671   -0.80476   -2.00000   149%  42.8 4192s
 354481 237334   -2.00000  379 4676   -0.80476   -2.00000   149%  43.0 4241s
 359095 239351   -2.00000  143 4699   -0.80476   -2.00000   149%  43.1 4288s
 362852 242187   -2.00000  691 4644   -0.80476   -2.00000   149%  43.6 4336s
 367712 244460   -2.00000  449 4676   -0.80476   -2.00000   149%  43.9 4388s
 372229 247343   -2.00000  487 4666   -0.80476   -2.00000   149%  44.3 4440s
 377280 250113   -2.00000  309 4691   -0.80476   -2.00000   149%  44.7 4491s
 381968 251252   -2.00000  287 4675   -0.80476   -2.00000   149%  45.0 4572s
 384005 256550 infeasible  288        -0.80476   -2.00000   149%  45.1 4643s
H391392 256550                      -0.8053691   -2.00000   148%  45.3 4643s
 391636 259840   -2.00000  235 4688   -0.80537   -2.00000   148%  45.3 4700s
H392631 259840                      -0.8053699   -2.00000   148%  45.3 4700s
 396789 262210   -2.00000  364 4666   -0.80537   -2.00000   148%  45.5 4749s
 400748 265374   -2.00000  361 4675   -0.80537   -2.00000   148%  45.7 4804s
H402476 265374                      -0.8053700   -2.00000   148%  45.8 4804s
 406430 269344   -2.00000  432 4681   -0.80537   -2.00000   148%  46.0 4856s
 412173 273627   -2.00000  198 4683   -0.80537   -2.00000   148%  46.2 4905s
 418022 276941   -2.00000  398 4674   -0.80537   -2.00000   148%  46.3 4948s
 422779 280169   -2.00000  461 4655   -0.80537   -2.00000   148%  46.5 4995s
 427504 283188   -2.00000  537 4651   -0.80537   -2.00000   148%  46.6 5037s
 431692 285120 infeasible  355        -0.80537   -2.00000   148%  46.8 5080s
 434886 288666   -2.00000  446 4674   -0.80537   -2.00000   148%  47.0 5131s
 440271 293132   -2.00000  318 4663   -0.80537   -2.00000   148%  47.2 5180s
 446005 297204   -2.00000  249 4675   -0.80537   -2.00000   148%  47.3 5223s
 451477 300942   -2.00000  324 4678   -0.80537   -2.00000   148%  47.4 5269s
 456483 303746   -2.00000  383 4659   -0.80537   -2.00000   148%  47.5 5313s
 460400 307656   -2.00000  435 4672   -0.80537   -2.00000   148%  47.6 5359s
 465676 310627   -2.00000  325 4688   -0.80537   -2.00000   148%  47.7 5404s
 470050 313287   -2.00000  414 4675   -0.80537   -2.00000   148%  48.0 5449s
 474250 316015   -2.00000  407 4658   -0.80537   -2.00000   148%  48.3 5495s
 478624 318726   -2.00000  635 4646   -0.80537   -2.00000   148%  48.7 5543s
 482996 321328   -2.00000  698 4642   -0.80537   -2.00000   148%  49.0 5594s
 487558 324114   -2.00000  756 4639   -0.80537   -2.00000   148%  49.4 5646s
 492460 326142   -2.00000  818 4621   -0.80537   -2.00000   148%  49.7 5699s
 495885 329481   -2.00000  864 4637   -0.80537   -2.00000   148%  49.9 5755s
 501540 331823   -2.00000  904 4636   -0.80537   -2.00000   148%  50.2 5804s
 505967 335049   -2.00000  393 4676   -0.80537   -2.00000   148%  50.5 5855s
 511396 337396   -2.00000  698 4663   -0.80537   -2.00000   148%  50.8 5905s
 516087 338204   -2.00000 1356 4607   -0.80537   -2.00000   148%  51.3 5985s
 517778 340362   -2.00000 1357 4609   -0.80537   -2.00000   148%  51.4 6046s
 522893 342448   -2.00000 2060 4581   -0.80537   -2.00000   148%  52.0 6106s
 527791 344886 infeasible 1407        -0.80537   -2.00000   148%  52.6 6171s
 533423 347479 infeasible  923        -0.80537   -2.00000   148%  52.9 6235s
 538668 350262   -2.00000 1111 4638   -0.80537   -2.00000   148%  53.3 6297s
 543918 352369   -2.00000 1202 4629   -0.80537   -2.00000   148%  53.7 6352s
 548573 354735   -2.00000 1254 4630   -0.80537   -2.00000   148%  54.0 6404s
 553279 356802   -2.00000 1301 4624   -0.80537   -2.00000   148%  54.3 6461s
 557396 359943   -2.00000 1344 4621   -0.80537   -2.00000   148%  54.6 6519s
 563039 362457 infeasible 1408        -0.80537   -2.00000   148%  54.9 6576s
 567994 365211   -2.00000 1459 4624   -0.80537   -2.00000   148%  55.2 6631s
 572893 368320   -2.00000 1507 4619   -0.80537   -2.00000   148%  55.6 6686s
 578182 370447   -2.00000 1584 4619   -0.80537   -2.00000   148%  55.8 6738s
 582113 373263   -2.00000 1645 4602   -0.80537   -2.00000   148%  56.1 6798s
 587561 375452   -2.00000 1703 4614   -0.80537   -2.00000   148%  56.4 6847s
 591716 377648   -2.00000 1762 4591   -0.80537   -2.00000   148%  56.7 6900s
 596502 380194   -2.00000 1817 4608   -0.80537   -2.00000   148%  57.1 6953s
 601387 382713   -2.00000 1876 4606   -0.80537   -2.00000   148%  57.5 7005s
 606333 384948   -2.00000 1932 4601   -0.80537   -2.00000   148%  57.9 7060s
 610801 387504 infeasible 1985        -0.80537   -2.00000   148%  58.3 7113s
 615872 389404   -1.52757 2055 4595   -0.80537   -2.00000   148%  58.6 7165s
 620032 391216 infeasible 2070        -0.80537   -2.00000   148%  58.9 7219s
 624051 391216   -2.00000 1916 4606   -0.80537   -2.00000   148%  59.2 7220s
 624366 393389   -2.00000 1121 4628   -0.80537   -2.00000   148%  59.3 7272s
 629350 395714   -2.00000 1698 4630   -0.80537   -2.00000   148%  59.7 7328s
 634414 398348   -2.00000  583 4658   -0.80537   -2.00000   148%  59.9 7387s
 639709 400248   -2.00000  677 4646   -0.80537   -2.00000   148%  60.1 7444s
 644204 402176   -2.00000  345 4673   -0.80537   -2.00000   148%  60.4 7497s
 648707 404187 infeasible 1715        -0.80537   -2.00000   148%  60.7 7556s
 653507 406864   -2.00000 1121 4623   -0.80537   -2.00000   148%  61.0 7616s
 658857 409293   -2.00000 1021 4636   -0.80537   -2.00000   148%  61.2 7671s
 663583 412021   -2.00000 1822 4582   -0.80537   -2.00000   148%  61.4 7727s
 668466 414365   -2.00000 1825 4579   -0.80537   -2.00000   148%  61.7 7783s
 673157 416544   -2.00000 1833 4584   -0.80537   -2.00000   148%  61.9 7841s
 677830 418554   -2.00000  270 4680   -0.80537   -2.00000   148%  62.2 7900s
 682039 421013 infeasible 1802        -0.80537   -2.00000   148%  62.4 7954s
 687090 423182   -2.00000  922 4645   -0.80537   -2.00000   148%  62.6 8012s
 692172 425159   -2.00000 1614 4605   -0.80537   -2.00000   148%  62.8 8066s
 696791 427242   -2.00000 1692 4602   -0.80537   -2.00000   148%  63.2 8121s
 701298 429991 infeasible 1759        -0.80537   -2.00000   148%  63.4 8177s
 706554 432739   -2.00000 1824 4596   -0.80537   -2.00000   148%  63.7 8234s
 711872 435191   -2.00000 1865 4597   -0.80537   -2.00000   148%  63.9 8288s
 716617 437109   -2.00000 1923 4593   -0.80537   -2.00000   148%  64.1 8342s
 721052 438832   -2.00000 1990 4591   -0.80537   -2.00000   148%  64.3 8396s
 725466 440724   -2.00000 2064 4592   -0.80537   -2.00000   148%  64.5 8454s
 729996 442711   -1.81618 2120 4585   -0.80537   -2.00000   148%  64.8 8510s
 734887 444620 infeasible 2144        -0.80537   -2.00000   148%  65.0 8569s
 739640 446692   -2.00000 2092 4582   -0.80537   -2.00000   148%  65.3 8627s
 744191 449280   -2.00000  605 4651   -0.80537   -2.00000   148%  65.5 8686s
 749417 451420   -2.00000 1888 4603   -0.80537   -2.00000   148%  65.7 8743s
 754107 453474   -2.00000 1944 4599   -0.80537   -2.00000   148%  65.9 8799s
 758629 455616   -2.00000 2044 4580   -0.80537   -2.00000   148%  66.1 8856s
 762961 458599   -2.00000 2080 4580   -0.80537   -2.00000   148%  66.2 8914s
 768537 461045 infeasible 2164        -0.80537   -2.00000   148%  66.4 8969s
 773684 463299   -1.49974 2236 4573   -0.80537   -2.00000   148%  66.6 9023s
 778501 465300   -2.00000  346 4693   -0.80537   -2.00000   148%  66.8 9079s
 783073 468370   -2.00000  401 4687   -0.80537   -2.00000   148%  67.0 9135s
 788500 470700   -2.00000 2109 4588   -0.80537   -2.00000   148%  67.1 9189s
 792884 473283   -1.28738 2167 4588   -0.80537   -2.00000   148%  67.2 9243s
 797982 475787   -1.24498 2264 4578   -0.80537   -2.00000   148%  67.4 9298s
 803227 477871   -1.21476 2335 4574   -0.80537   -2.00000   148%  67.5 9351s
 808001 479801 infeasible 2418        -0.80537   -2.00000   148%  67.7 9411s
 812732 481645 infeasible 2510        -0.80537   -2.00000   148%  67.8 9464s
 816990 484016 infeasible  442        -0.80537   -2.00000   148%  68.0 9517s
 822127 486480   -2.00000  525 4651   -0.80537   -2.00000   148%  68.1 9573s
 826892 489207   -2.00000  585 4649   -0.80537   -2.00000   148%  68.2 9631s
 832206 491819   -2.00000  690 4642   -0.80537   -2.00000   148%  68.3 9686s
 836964 494080   -2.00000  765 4633   -0.80537   -2.00000   148%  68.4 9741s
 841716 496252   -2.00000  871 4636   -0.80537   -2.00000   148%  68.5 9828s
 846435 498211   -2.00000  951 4632   -0.80537   -2.00000   148%  68.6 9879s
 850411 501247   -2.00000  984 4633   -0.80537   -2.00000   148%  68.8 9930s
 855898 504162   -2.00000  501 4644   -0.80537   -2.00000   148%  68.8 9988s
 861123 506880   -2.00000 1819 4608   -0.80537   -2.00000   148%  68.9 10042s
 866316 508740   -2.00000  232 4705   -0.80537   -2.00000   148%  69.0 10094s
 869808 511440   -2.00000  887 4641   -0.80537   -2.00000   148%  69.1 10148s
 875039 513971   -2.00000  921 4638   -0.80537   -2.00000   148%  69.3 10202s
 879945 516650   -2.00000  984 4641   -0.80537   -2.00000   148%  69.5 10254s
 884687 519448   -2.00000 1040 4637   -0.80537   -2.00000   148%  69.6 10307s
 889669 521737   -2.00000  885 4635   -0.80537   -2.00000   148%  69.7 10364s
 894154 523701   -2.00000  906 4643   -0.80537   -2.00000   148%  69.8 10418s
 898552 526372   -2.00000  522 4656   -0.80537   -2.00000   148%  70.0 10476s
 903861 528829   -2.00000  524 4650   -0.80537   -2.00000   148%  70.1 10530s
 908777 531390   -2.00000  497 4670   -0.80537   -2.00000   148%  70.2 10584s
 913580 534123   -2.00000  703 4634   -0.80537   -2.00000   148%  70.3 10640s
 918587 536748   -2.00000  769 4628   -0.80537   -2.00000   148%  70.4 10692s
 923377 538927   -2.00000 2024 4596   -0.80537   -2.00000   148%  70.5 10742s
 927780 541263   -2.00000  685 4640   -0.80537   -2.00000   148%  70.7 10799s
 932578 541278 infeasible 1646        -0.80537   -2.00000   148%  70.8 10800s

Cutting planes:
  Implied bound: 13
  MIR: 2
  Flow cover: 30
  RLT: 1720
  PSD: 1092

Explored 932611 nodes (66046254 simplex iterations) in 10800.68 seconds (8934.32 work units)
Thread count was 32 (of 32 available processors)

Solution count 10: -0.80537 -0.804762 -0.804345 ... -0.649266

Time limit reached
Warning: max constraint violation (2.3273e-06) exceeds tolerance
Best objective -8.053700231103e-01, best bound -2.000000000000e+00, gap 148.3331%
10800.679285049438
